name: Docker Build and Push

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/easy-translate-backend

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: Set LOWER_REPO_BACKEND
        id: lowerrepo
        run: |
          echo "LOWER_REPO_BACKEND=${GITHUB_REPOSITORY,,}/backend" >> $GITHUB_ENV

      - name: Set SNAP_TAG
        if: github.ref_type == 'branch' && github.ref_name == 'main'
        id: snap
        run: |
          SNAP_TAG=snap_$(date +%Y%m%d%H%M%S)_${GITHUB_SHA::6}
          echo "SNAP_TAG=$SNAP_TAG" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ${{ github.ref_type == 'branch' && github.ref_name == 'main' && format('{0}/{1}:{2}', env.REGISTRY, env.LOWER_REPO_BACKEND, env.SNAP_TAG) || '' }}
            ${{ github.ref_type == 'tag' && steps.meta.outputs.tags || '' }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate build artifacts
        if: github.event_name == 'pull_request'
        run: |
          echo "Build completed for PR #${{ github.event.number }}"
          echo "Image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
          echo "Platforms: linux/amd64, linux/arm64" 